{"version":3,"sources":["Navbar.js","Membership.js","Memberlist.js","Contact.js","Editmember.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Membership","useState","firstname","setfirstname","lastname","setlastname","email","setemail","contact","setcontact","loading","setloading","message","setmessage","onSubmit","e","preventDefault","member","axios","post","then","res","console","log","data","onChange","target","value","toUpperCase","substr","type","name","placeholder","Memberlist","user","setuser","useEffect","get","response","catch","error","map","users","key","_id","onClick","id","delete","Contact","style","color","Editmember","useParams","Home","fontSize","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f943b0b8.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./css/NavbarStyle.css\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"navbarStyle\">\n      <h1 className=\"header\">MERN Practice</h1>\n      <ul className=\"unl\">\n        <li className=\"lis\">\n          <Link className=\"link\" to=\"/\">\n            Home\n          </Link>\n        </li>\n        <li className=\"lis\">\n          <Link className=\"link\" to=\"/membership\">\n            Membership\n          </Link>\n        </li>\n        <li className=\"lis\">\n          <Link className=\"link\" to=\"/memberlist\">\n            Members\n          </Link>\n        </li>\n        <li className=\"lis\">\n          <Link className=\"link\" to=\"/contact\">\n            Contact\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nconst Membership = () => {\n  const [firstname, setfirstname] = useState(\"\");\n  const [lastname, setlastname] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [contact, setcontact] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  const [message, setmessage] = useState(\"\");\n\n  const handleFirstName = e => {\n    return setfirstname(e.target.value.toUpperCase().substr(0, 10));\n  };\n  const handleLastName = e => {\n    return setlastname(e.target.value.toUpperCase().substr(0, 10));\n  };\n  const handleEmail = e => {\n    return setemail(e.target.value);\n  };\n  const handleContact = e => {\n    return setcontact(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setloading(true);\n    const member = {\n      firstname: firstname,\n      lastname: lastname,\n      email: email,\n      contact: contact\n    };\n\n    axios.post(\"http://localhost:5000/users/add\", member).then(res => {\n      console.log(res.data);\n      setloading(false);\n      setmessage(\"User added!!!\");\n      setfirstname(\"\");\n      setlastname(\"\");\n      setemail(\"\");\n      setcontact(\"\");\n    });\n\n    //  console.log(member);\n    //  console.log(e.target[0].value);\n    //  console.log(e.target[1].value);\n    //  console.log(e.target[2].value);\n    //  console.log(e.target[3].value);\n    //window.location=(\"/Memberlist\");\n  };\n\n  const message1 = () => {\n    if (loading) {\n      return <p>Loading...</p>;\n    } else {\n      return <p>{message}</p>;\n    }\n  };\n  return (\n    <div>\n      <h3>This is membership page</h3>\n      <form onSubmit={handleSubmit}>\n        <label>First Name:</label>{\" \"}\n        <input\n          onChange={handleFirstName}\n          type=\"text\"\n          name=\"firstname\"\n          value={firstname}\n          placeholder=\"FirstName\"\n        />{\" \"}\n        <br />\n        <label>Last Name:</label>{\" \"}\n        <input\n          onChange={handleLastName}\n          type=\"text\"\n          name=\"lastname\"\n          value={lastname}\n          placeholder=\"Last Name\"\n        />\n        <br />\n        <label>Email:</label>{\" \"}\n        <input\n          onChange={handleEmail}\n          type=\"text\"\n          value={email}\n          name=\"email\"\n          placeholder=\"Email\"\n        />\n        <br />\n        <label>Contact:</label>{\" \"}\n        <input\n          onChange={handleContact}\n          type=\"text\"\n          name=\"contact\"\n          value={contact}\n          placeholder=\"Contact\"\n        />\n        <br />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      {message1()}\n    </div>\n  );\n};\nexport default Membership;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Memberlist() {\n  const [user, setuser] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/users/\")\n      .then(response => {\n        setuser(response.data);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  });\n\n  const deleteUser = id => {\n    axios.delete(\"http://localhost:5000/users/\" + id).then(res => {\n      console.log(res.data);\n    });\n    console.log(\"deleted\");\n    //setuser(user.filter(el=>el._id !== id));\n  };\n\n  return (\n    <div>\n      <h1>Member List</h1>\n\n      <table>\n        <thead>\n          <tr>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Email</th>\n            <th>Contact</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n\n        {user.map(users => {\n          return (\n            <tbody key={users._id}>\n              <tr>\n                <td>{users.firstname}</td>\n                <td>{users.lastname}</td>\n                <td>{users.email}</td>\n                <td>{users.contact}</td>\n\n                <td>\n                  <button\n                    onClick={() => {\n                      deleteUser(users._id);\n                    }}\n                  >\n                    Delete\n                  </button>\n                  <button>\n                    <Link to={\"/edit/\" + users._id}>Edit</Link>\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          );\n        })}\n      </table>\n    </div>\n  );\n}\n","import React from \"react\";\n\nconst Contact = () => {\n  return (\n    <div>\n      <p style={{ color: \"red\" }}>This is Contact page</p>\n      <p>Ph: 0490004044</p>\n      <p>Email:krcandkrc@gmail.com</p>\n      <p>Address: 87 King St</p>\n    </div>\n  );\n};\nexport default Contact;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router\";\nconst Editmember = () => {\n  const { id } = useParams();\n  const [firstname, setfirstname] = useState(\"\");\n  const [lastname, setlastname] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [contact, setcontact] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  const [message, setmessage] = useState(\"\");\n\n  const handleFirstName = e => {\n    return setfirstname(e.target.value.toUpperCase().substr(0, 10));\n  };\n  const handleLastName = e => {\n    return setlastname(e.target.value.toUpperCase().substr(0, 10));\n  };\n  const handleEmail = e => {\n    return setemail(e.target.value);\n  };\n  const handleContact = e => {\n    return setcontact(e.target.value);\n  };\n\n  //  useEffect(() => {\n  //   axios\n  //     .get(\"http://localhost:5000/users/\" +   id  )\n  //     .then(response => {\n  //       console.log(id);\n  //       setfirstname(response.data.firstname);\n  //       setlastname(response.data.lastname);\n  //       setemail(response.data.email);\n  //       setcontact(response.data.contact);\n  //     })\n  //     .catch(error => {\n  //       console.log(error);\n  //     });\n  //});\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setloading(true);\n    const member = {\n      firstname: firstname,\n      lastname: lastname,\n      email: email,\n      contact: contact\n    };\n\n    axios\n      .post(\"http://localhost:5000/users/update/\" + id, member)\n      .then(res => {console.log(res.data)\n        setloading(false);\n      setmessage(\"Member updated!!!\");\n    setfirstname(\"\");\n    setlastname(\"\");\n    setemail(\"\");\n    setcontact(\"\");\n      })\n    //  console.log(member);\n    //  console.log(e.target[0].value);\n    //  console.log(e.target[1].value);\n    //  console.log(e.target[2].value);\n    //  console.log(e.target[3].value);\n    //window.location=(\"/Memberlist\");\n  };\n\n  \n  const message1 = () => {\n    if (loading) {\n      return <p>Loading...</p>;\n    } else {\n      return <p>{message}</p>;\n    }\n  };\n\n  return (\n    <div>\n      <h3>This is Edit membership page</h3>\n      <h2>Edit your profile</h2>\n      <form onSubmit={handleSubmit}>\n        <label>First Name:</label>{\" \"}\n        <input\n          onChange={handleFirstName}\n          type=\"text\"\n          name=\"firstname\"\n          value={firstname}\n          placeholder=\"FirstName\"\n        />{\" \"}\n        <br />\n        <label>Last Name:</label>{\" \"}\n        <input\n          onChange={handleLastName}\n          type=\"text\"\n          name=\"lastname\"\n          value={lastname}\n          placeholder=\"Last Name\"\n        />\n        <br />\n        <label>Email:</label>{\" \"}\n        <input\n          onChange={handleEmail}\n          type=\"text\"\n          value={email}\n          name=\"email\"\n          placeholder=\"Email\"\n        />\n        <br />\n        <label>Contact:</label>{\" \"}\n        <input\n          onChange={handleContact}\n          type=\"text\"\n          name=\"contact\"\n          value={contact}\n          placeholder=\"Contact\"\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      {message1()}\n    </div>\n  );\n};\nexport default Editmember;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Membership from \"./Membership\";\nimport Memberlist from \"./Memberlist\";\nimport Contact from \"./Contact\";\nimport Editmember from \"./Editmember\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/membership\" component={Membership} />\n          <Route path=\"/memberlist\" component={Memberlist} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/edit/:id\" component={Editmember} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nconst Home = () => {\n  const h2Style = {\n    color: \"red\",\n    fontSize: \"15px\"\n  };\n  return (\n    <header className=\"App-header\">\n      <h4 style={{ color: \"green\", fontSize: \"20px\" }}>\n        Welcome to MERN-STACK APP DEVLOPMENT\n      </h4>\n      <h4 style={h2Style}>This is Home Page</h4>\n    </header>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}